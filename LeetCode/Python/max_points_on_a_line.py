#!/usr/bin/env python
#coding: utf-8


# Definition for a point
class Point:
    def __init__(self, a=0, b=0):
        self.x = a
        self.y = b

class Solution:
    # @param points, a list of Points
    # @return an integer
    def maxPoints(self, points):
        lp = len(points)
        if lp <= 2:
            return lp

        i, pmax = 0, 0
        for x in points:
            k = {}
            add = 1
            for y in points[i+1:]:
                if x.x == y.x and x.y == y.y:
                    add += 1
                    continue
                arc = 0 if x.y == y.y else (1.0 * (x.x-y.x)/(x.y-y.y))
                k[arc] = k.get(arc, 0) + 1
            if k:
                pmax = max(pmax, add + max(k.values()))
            else:
                pmax = max(pmax, add)

            i += 1
        return pmax

if __name__ == '__main__':
    s = Solution()
    assert s.maxPoints([Point(0,0)]) == 1
    assert s.maxPoints([Point(0,0), Point(1,2)]) == 2
    assert s.maxPoints([Point(0,0), Point(1,1), Point(2,2)]) == 3
    assert s.maxPoints([Point(0,0), Point(1,2), Point(2,2)]) == 2
    assert s.maxPoints([Point(1,1), Point(1,1), Point(1,1)]) == 3
    assert s.maxPoints([Point(0,0), Point(1,1), Point(0,0)]) == 3

    tl = [(29,87),(145,227),(400,84),(800,179),(60,950),(560,122),(-6,5),(-87,-53),(-64,-118),(-204,-388),(720,160),(-232,-228),(-72,-135),(-102,-163),(-68,-88),(-116,-95),(-34,-13),(170,437),(40,103),(0,-38),(-10,-7),(-36,-114),(238,587),(-340,-140),(-7,2),(36,586),(60,950),(-42,-597),(-4,-6),(0,18),(36,586),(18,0),(-720,-182),(240,46),(5,-6),(261,367),(-203,-193),(240,46),(400,84),(72,114),(0,62),(-42,-597),(-170,-76),(-174,-158),(68,212),(-480,-125),(5,-6),(0,-38),(174,262),(34,137),(-232,-187),(-232,-228),(232,332),(-64,-118),(-240,-68),(272,662),(-40,-67),(203,158),(-203,-164),(272,662),(56,137),(4,-1),(-18,-233),(240,46),(-3,2),(640,141),(-480,-125),(-29,17),(-64,-118),(800,179),(-56,-101),(36,586),(-64,-118),(-87,-53),(-29,17),(320,65),(7,5),(40,103),(136,362),(-320,-87),(-5,5),(-340,-688),(-232,-228),(9,1),(-27,-95),(7,-5),(58,122),(48,120),(8,35),(-272,-538),(34,137),(-800,-201),(-68,-88),(29,87),(160,27),(72,171),(261,367),(-56,-101),(-9,-2),(0,52),(-6,-7),(170,437),(-261,-210),(-48,-84),(-63,-171),(-24,-33),(-68,-88),(-204,-388),(40,103),(34,137),(-204,-388),(-400,-106)]


    tp = []
    for t in tl:
        tp.append(Point(t[0],t[1]))
    assert s.maxPoints(tp) == 21
